{"ast":null,"code":"var _jsxFileName = \"D:\\\\NodeJs\\\\Full-Ecommerce-template\\\\ecommerce\\\\ecommerce\\\\website\\\\src\\\\app\\\\components\\\\web\\\\views\\\\checkout\\\\register\\\\index.js\";\nimport React, { Component } from 'react';\nimport { GetUserLogin } from '../../../../services';\nimport { NotificationManager } from \"react-notifications\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let {\n        firstName,\n        email,\n        password,\n        gender\n      } = this.state;\n      let data = {\n        firstName: firstName,\n        email: email,\n        password: password,\n        gender: gender\n      };\n\n      if (formValid(this.state)) {\n        let list = await GetUserLogin.getUserRegister(data);\n\n        if (list) {\n          NotificationManager.success(\"Successfully Added New User\");\n          window.location.href = \"/login\";\n        }\n      } else {\n        NotificationManager.error(\"Please check your Register\", \"Input Error\");\n      }\n    };\n\n    this.state = {\n      firstName: null,\n      email: null,\n      password: null,\n      formErrors: {\n        firstName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  render() {\n    let {\n      firstName,\n      email,\n      password,\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card checkout-step-one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#collapseOne\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"1\"), \" Login or SignUp\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"collapseOne\",\n      className: \"collapse show\",\n      \"aria-labelledby\": \"headingOne\",\n      \"data-parent\": \"#accordionExample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog modal-lg modal-dialog-centered\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-modal login-page-bk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6 pad-right-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-modal-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6 pad-left-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"heading-design-h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 49\n      }\n    }, \"Register Now!\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 53\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"firstName\",\n      value: firstName,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 53\n      }\n    }), formErrors.firstName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 57\n      }\n    }, formErrors.firstName)), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 53\n      }\n    }, \"Enter Email/Mobile number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 53\n      }\n    }), formErrors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 57\n      }\n    }, formErrors.email)), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 53\n      }\n    }, \"Enter Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 53\n      }\n    }), formErrors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 57\n      }\n    }, formErrors.password)), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-lg btn-secondary btn-block\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 53\n      }\n    }, \"Create Your Account\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"customCheck2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"customCheck2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 53\n      }\n    }, \"I Agree with \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 129\n      }\n    }, \"Term and Conditions\"))))))))))));\n  }\n\n}","map":{"version":3,"sources":["D:/NodeJs/Full-Ecommerce-template/ecommerce/ecommerce/website/src/app/components/web/views/checkout/register/index.js"],"names":["React","Component","GetUserLogin","NotificationManager","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Register","constructor","props","handleChange","e","preventDefault","name","value","target","state","firstName","email","test","password","setState","handleSubmit","event","gender","data","list","getUserRegister","success","window","location","href","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,mBAAT,QAAoC,qBAApC;AAEA,MAAMC,UAAU,GAAGC,MAAM,CACrB,sEADqB,CAAzB;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAc,KAAGC;AAAjB,CAAD,KAA6B;AAC3C,MAAIC,KAAK,GAAG,IAAZ,CAD2C,CAG3C;;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcJ,UAAd,EAA0BK,OAA1B,CAAkCC,GAAG,IAAI;AACrCA,IAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBL,KAAK,GAAG,KAA3B;AACH,GAFD,EAJ2C,CAQ3C;;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoBI,OAApB,CAA4BC,GAAG,IAAI;AAC/BA,IAAAA,GAAG,KAAK,IAAR,KAAiBJ,KAAK,GAAG,KAAzB;AACH,GAFD;AAIA,SAAOA,KAAP;AACH,CAdD;;AAeA,eAAe,MAAMM,QAAN,SAAuBd,SAAvB,CAAiC;AAC5Ce,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,YAbmB,GAaJC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBH,CAAC,CAACI,MAA1B;AACA,UAAIhB,UAAU,GAAG,EAAE,GAAG,KAAKiB,KAAL,CAAWjB;AAAhB,OAAjB;;AAEA,cAAQc,IAAR;AACI,aAAK,WAAL;AACId,UAAAA,UAAU,CAACkB,SAAX,GACIH,KAAK,CAACR,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EAD1D;AAEA;;AACJ,aAAK,OAAL;AACIP,UAAAA,UAAU,CAACmB,KAAX,GAAmBtB,UAAU,CAACuB,IAAX,CAAgBL,KAAhB,IACb,EADa,GAEb,uBAFN;AAGA;;AACJ,aAAK,UAAL;AACIf,UAAAA,UAAU,CAACqB,QAAX,GACIN,KAAK,CAACR,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EAD1D;AAEA;;AACJ;AACI;AAfR;;AAkBA,WAAKe,QAAL,CAAc;AAAEtB,QAAAA,UAAF;AAAc,SAACc,IAAD,GAAQC;AAAtB,OAAd;AACH,KArCkB;;AAAA,SAuCnBQ,YAvCmB,GAuCJ,MAAOC,KAAP,IAAiB;AAC5BA,MAAAA,KAAK,CAACX,cAAN;AACA,UAAI;AAAEK,QAAAA,SAAF;AAAaC,QAAAA,KAAb;AAAoBE,QAAAA,QAApB;AAA8BI,QAAAA;AAA9B,UAAyC,KAAKR,KAAlD;AACA,UAAIS,IAAI,GAAG;AAAER,QAAAA,SAAS,EAAEA,SAAb;AAAwBC,QAAAA,KAAK,EAAEA,KAA/B;AAAsCE,QAAAA,QAAQ,EAAEA,QAAhD;AAA0DI,QAAAA,MAAM,EAAEA;AAAlE,OAAX;;AACA,UAAI1B,SAAS,CAAC,KAAKkB,KAAN,CAAb,EAA2B;AACvB,YAAIU,IAAI,GAAG,MAAMhC,YAAY,CAACiC,eAAb,CAA6BF,IAA7B,CAAjB;;AACA,YAAIC,IAAJ,EAAU;AACN/B,UAAAA,mBAAmB,CAACiC,OAApB,CAA4B,6BAA5B;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,QAArB;AACH;AACJ,OAND,MAMO;AACHpC,QAAAA,mBAAmB,CAACqC,KAApB,CAA0B,4BAA1B,EAAwD,aAAxD;AACH;AAEJ,KArDkB;;AAEf,SAAKhB,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTE,MAAAA,QAAQ,EAAE,IAHD;AAITrB,MAAAA,UAAU,EAAE;AACRkB,QAAAA,SAAS,EAAE,EADH;AAERC,QAAAA,KAAK,EAAE,EAFC;AAGRE,QAAAA,QAAQ,EAAE;AAHF;AAJH,KAAb;AAUH;;AA0CDa,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEhB,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBE,MAAAA,QAApB;AAA8BrB,MAAAA;AAA9B,QAA6C,KAAKiB,KAAtD;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,EAAE,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,qBAAY,UAA3D;AAAsE,qBAAY,cAAlF;AAAiG,uBAAc,MAA/G;AAAsH,uBAAc,aAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,qBADJ,CADJ,CADJ,eAQI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC,eAAhC;AAAgD,yBAAgB,YAAhE;AAA6E,qBAAY,mBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,6CAAf;AAA6D,MAAA,IAAI,EAAC,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAKM,YAArB;AAAmC,MAAA,UAAU,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,WAAjD;AAA6D,MAAA,KAAK,EAAEL,SAApE;AAA+E,MAAA,QAAQ,EAAE,KAAKP,YAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKX,UAAU,CAACkB,SAAX,CAAqBX,MAArB,GAA8B,CAA9B,iBACG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCP,UAAU,CAACkB,SAA3C,CAJR,CAFJ,eASI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,OAAjD;AAAyD,MAAA,KAAK,EAAEC,KAAhE;AAAuE,MAAA,QAAQ,EAAE,KAAKR,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKX,UAAU,CAACmB,KAAX,CAAiBZ,MAAjB,GAA0B,CAA1B,iBACG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCP,UAAU,CAACmB,KAA3C,CAJR,CATJ,eAgBI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,cAAjC;AAAgD,MAAA,IAAI,EAAC,UAArD;AAAgE,MAAA,KAAK,EAAEE,QAAvE;AAAiF,MAAA,QAAQ,EAAE,KAAKV,YAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKX,UAAU,CAACqB,QAAX,CAAoBd,MAApB,GAA6B,CAA7B,iBACG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCP,UAAU,CAACqB,QAA3C,CAJR,CAhBJ,eAuBI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,oCAAhC;AAAqE,MAAA,OAAO,EAAE,KAAKE,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CAvBJ,eA0BI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,sBAAjC;AAAwD,MAAA,EAAE,EAAC,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAwC,MAAA,OAAO,EAAC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA4E;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA5E,CAFJ,CA1BJ,CADJ,CALJ,CADJ,CADJ,CADJ,CADJ,CADJ,CARJ,CADJ;AA4DH;;AArH2C","sourcesContent":["import React, { Component } from 'react';\nimport { GetUserLogin } from '../../../../services';\nimport { NotificationManager } from \"react-notifications\";\n\nconst emailRegex = RegExp(\n    /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n    let valid = true;\n\n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n        val.length > 0 && (valid = false);\n    });\n\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n        val === null && (valid = false);\n    });\n\n    return valid;\n};\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: null,\n            email: null,\n            password: null,\n            formErrors: {\n                firstName: \"\",\n                email: \"\",\n                password: \"\"\n            }\n        };\n    }\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n\n        switch (name) {\n            case \"firstName\":\n                formErrors.firstName =\n                    value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n                break;\n            case \"email\":\n                formErrors.email = emailRegex.test(value)\n                    ? \"\"\n                    : \"invalid email address\";\n                break;\n            case \"password\":\n                formErrors.password =\n                    value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ formErrors, [name]: value });\n    };\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        let { firstName, email, password, gender } = this.state;\n        let data = { firstName: firstName, email: email, password: password, gender: gender }\n        if (formValid(this.state)) {\n            let list = await GetUserLogin.getUserRegister(data);\n            if (list) {\n                NotificationManager.success(\"Successfully Added New User\");\n                window.location.href=\"/login\";\n            }\n        } else {\n            NotificationManager.error(\"Please check your Register\", \"Input Error\");\n        }\n\n    }\n    render() {\n        let { firstName, email, password, formErrors } = this.state;\n        return (\n            <div className=\"card checkout-step-one\">\n                <div className=\"card-header\" id=\"headingOne\">\n                    <h5 className=\"mb-0\">\n                        <button className=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            <span className=\"number\">1</span> Login or SignUp\n                        </button>\n                    </h5>\n                </div>\n                <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\n                    <div className=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-body\">\n                                <div className=\"login-modal login-page-bk\">\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 pad-right-0\">\n                                            <div className=\"login-modal-left\">\n                                            </div>\n                                        </div>\n                                        <div className=\"col-lg-6 pad-left-0\">\n                                            <form onSubmit={this.handleSubmit} noValidate>\n                                                <h5 className=\"heading-design-h5\">Register Now!</h5>\n                                                <fieldset className=\"form-group\">\n                                                    <label>First Name</label>\n                                                    <input type=\"text\" className=\"form-control\" name=\"firstName\" value={firstName} onChange={this.handleChange} />\n                                                    {formErrors.firstName.length > 0 && (\n                                                        <span className=\"errorMessage\">{formErrors.firstName}</span>\n                                                    )}\n                                                </fieldset>\n                                                <fieldset className=\"form-group\">\n                                                    <label>Enter Email/Mobile number</label>\n                                                    <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={this.handleChange} />\n                                                    {formErrors.email.length > 0 && (\n                                                        <span className=\"errorMessage\">{formErrors.email}</span>\n                                                    )}\n                                                </fieldset>\n                                                <fieldset className=\"form-group\">\n                                                    <label>Enter Password</label>\n                                                    <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={this.handleChange} />\n                                                    {formErrors.password.length > 0 && (\n                                                        <span className=\"errorMessage\">{formErrors.password}</span>\n                                                    )}\n                                                </fieldset>\n                                                <fieldset className=\"form-group\">\n                                                    <button type=\"submit\" className=\"btn btn-lg btn-secondary btn-block\" onClick={this.handleSubmit}>Create Your Account</button>\n                                                </fieldset>\n                                                <div className=\"custom-control custom-checkbox\">\n                                                    <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck2\" />\n                                                    <label className=\"custom-control-label\" htmlFor=\"customCheck2\">I Agree with <a href=\"#\">Term and Conditions</a></label>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}