{"ast":null,"code":"import _objectSpread from\"D:\\\\NodeJs\\\\Full-Ecommerce-template\\\\ecommerce\\\\ecommerce\\\\website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{ADD_TO_CART,REMOVE_FROM_CART,INCREASE_QUANTITY,DECREASE_QUANTITY}from\"./types\";export var addToCart=function addToCart(product){return function(dispatch,getState){var cartItems=getState().cart.cartItems.slice();var alreadyExists=false;cartItems.forEach(function(x){if(x.id===product.id){alreadyExists=true;}});if(!alreadyExists){cartItems.push(_objectSpread({},product));}dispatch({type:ADD_TO_CART,payload:{cartItems:cartItems}});localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));};};export var removeFromCart=function removeFromCart(product){return function(dispatch,getState){var cartItems=getState().cart.cartItems.slice().filter(function(x){return x.id!==product.id;});dispatch({type:REMOVE_FROM_CART,payload:{cartItems:cartItems}});localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));};};export var incrementToCart=function incrementToCart(product){return function(dispatch,getState){var cartItems=getState().cart.cartItems.slice();var selectProduct=cartItems.find(function(item){return item.id===product.id;});var index=cartItems.indexOf(selectProduct);var value=cartItems[index];value.qty=value.qty+1;value.total=value.qty*value.netPrice;dispatch({type:INCREASE_QUANTITY,payload:{cartItems:cartItems}});localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));};};export var decreaseToCart=function decreaseToCart(product){return function(dispatch,getState){var cartItems=getState().cart.cartItems.slice();var selectProduct=cartItems.find(function(item){return item.id===product.id;});var index=cartItems.indexOf(selectProduct);var value=cartItems[index];if(value.qty>1){value.qty=value.qty-1;value.total=value.qty*value.netPrice;}dispatch({type:DECREASE_QUANTITY,payload:{cartItems:cartItems}});localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));};};","map":{"version":3,"sources":["D:/NodeJs/Full-Ecommerce-template/ecommerce/ecommerce/website/src/app/store/actions/cartActions.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","INCREASE_QUANTITY","DECREASE_QUANTITY","addToCart","product","dispatch","getState","cartItems","cart","slice","alreadyExists","forEach","x","id","push","type","payload","localStorage","setItem","JSON","stringify","removeFromCart","filter","incrementToCart","selectProduct","find","item","index","indexOf","value","qty","total","netPrice","decreaseToCart"],"mappings":"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","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART, INCREASE_QUANTITY, DECREASE_QUANTITY } from \"./types\";\n\nexport const addToCart = (product) => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice();\n  let alreadyExists = false;\n  cartItems.forEach((x) => {\n    if (x.id === product.id) {\n      alreadyExists = true;\n    }\n  });\n  if (!alreadyExists) {\n    cartItems.push({ ...product });\n  }\n  dispatch({\n    type: ADD_TO_CART,\n    payload: { cartItems },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport const removeFromCart = (product) => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice().filter((x) => x.id !== product.id);\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport const incrementToCart = (product) => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice()\n  const selectProduct = cartItems.find(item => item.id === product.id)\n  const index = cartItems.indexOf(selectProduct)\n  const value = cartItems[index]\n  value.qty = value.qty + 1;\n  value.total = value.qty * value.netPrice;\n\n  dispatch({\n    type: INCREASE_QUANTITY,\n    payload: { cartItems },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n}\n\nexport const decreaseToCart = (product) => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice()\n  const selectProduct = cartItems.find(item => item.id === product.id)\n  const index = cartItems.indexOf(selectProduct)\n  const value = cartItems[index]\n  if (value.qty > 1) {\n    value.qty = value.qty - 1;\n    value.total = value.qty * value.netPrice;\n  }\n  dispatch({ type: DECREASE_QUANTITY, payload: { cartItems } });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n}\n\n"]},"metadata":{},"sourceType":"module"}