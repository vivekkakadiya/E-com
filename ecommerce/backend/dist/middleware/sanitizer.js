"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sanitize = void 0;

var sanitize = function sanitize() {
  var ignore = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return function (req, res, next) {
    var data = [];

    if (req.body) {
      data = Object.keys(req.body);

      for (var i = 0; i < data.length; i++) {
        if (ignore.indexOf(data[i]) == -1 && typeof req.body[data[i]] == 'string') req.body[data[i]] = req.sanitize(req.body[data[i]]).trim();
      }
    }

    if (req.params) {
      data = Object.keys(req.params);

      for (var i = 0; i < data.length; i++) {
        if (ignore.indexOf(data[i]) == -1 && typeof req.params[data[i]] == 'string') req.params[data[i]] = req.sanitize(req.params[data[i]]).trim();
      }
    }

    if (req.query) {
      data = Object.keys(req.query);

      for (var i = 0; i < data.length; i++) {
        if (ignore.indexOf(data[i]) == -1 && typeof req.query[data[i]] == 'string') req.query[data[i]] = req.sanitize(req.query[data[i]]).trim();
      }
    }

    next();
  };
};

exports.sanitize = sanitize;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlL3Nhbml0aXplci5qcyJdLCJuYW1lcyI6WyJzYW5pdGl6ZSIsImlnbm9yZSIsInJlcSIsInJlcyIsIm5leHQiLCJkYXRhIiwiYm9keSIsIk9iamVjdCIsImtleXMiLCJpIiwibGVuZ3RoIiwiaW5kZXhPZiIsInRyaW0iLCJwYXJhbXMiLCJxdWVyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLElBQUlBLFFBQVEsR0FBRyxTQUFYQSxRQUFXLEdBQW1CO0FBQUEsTUFBVkMsTUFBVSx1RUFBSCxFQUFHO0FBQ3JDLFNBQU8sVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDdkIsUUFBSUMsSUFBSSxHQUFHLEVBQVg7O0FBQ0EsUUFBR0gsR0FBRyxDQUFDSSxJQUFQLEVBQVk7QUFDUkQsTUFBQUEsSUFBSSxHQUFHRSxNQUFNLENBQUNDLElBQVAsQ0FBWU4sR0FBRyxDQUFDSSxJQUFoQixDQUFQOztBQUNBLFdBQUksSUFBSUcsQ0FBQyxHQUFDLENBQVYsRUFBWUEsQ0FBQyxHQUFDSixJQUFJLENBQUNLLE1BQW5CLEVBQTBCRCxDQUFDLEVBQTNCLEVBQThCO0FBQzFCLFlBQUdSLE1BQU0sQ0FBQ1UsT0FBUCxDQUFlTixJQUFJLENBQUNJLENBQUQsQ0FBbkIsS0FBMkIsQ0FBQyxDQUE1QixJQUFpQyxPQUFPUCxHQUFHLENBQUNJLElBQUosQ0FBU0QsSUFBSSxDQUFDSSxDQUFELENBQWIsQ0FBUCxJQUE0QixRQUFoRSxFQUNJUCxHQUFHLENBQUNJLElBQUosQ0FBU0QsSUFBSSxDQUFDSSxDQUFELENBQWIsSUFBb0JQLEdBQUcsQ0FBQ0YsUUFBSixDQUFhRSxHQUFHLENBQUNJLElBQUosQ0FBU0QsSUFBSSxDQUFDSSxDQUFELENBQWIsQ0FBYixFQUFnQ0csSUFBaEMsRUFBcEI7QUFDUDtBQUNKOztBQUNELFFBQUdWLEdBQUcsQ0FBQ1csTUFBUCxFQUFjO0FBQ1ZSLE1BQUFBLElBQUksR0FBR0UsTUFBTSxDQUFDQyxJQUFQLENBQVlOLEdBQUcsQ0FBQ1csTUFBaEIsQ0FBUDs7QUFDQSxXQUFJLElBQUlKLENBQUMsR0FBQyxDQUFWLEVBQVlBLENBQUMsR0FBQ0osSUFBSSxDQUFDSyxNQUFuQixFQUEwQkQsQ0FBQyxFQUEzQixFQUE4QjtBQUMxQixZQUFHUixNQUFNLENBQUNVLE9BQVAsQ0FBZU4sSUFBSSxDQUFDSSxDQUFELENBQW5CLEtBQTJCLENBQUMsQ0FBNUIsSUFBaUMsT0FBT1AsR0FBRyxDQUFDVyxNQUFKLENBQVdSLElBQUksQ0FBQ0ksQ0FBRCxDQUFmLENBQVAsSUFBOEIsUUFBbEUsRUFDSVAsR0FBRyxDQUFDVyxNQUFKLENBQVdSLElBQUksQ0FBQ0ksQ0FBRCxDQUFmLElBQXNCUCxHQUFHLENBQUNGLFFBQUosQ0FBYUUsR0FBRyxDQUFDVyxNQUFKLENBQVdSLElBQUksQ0FBQ0ksQ0FBRCxDQUFmLENBQWIsRUFBa0NHLElBQWxDLEVBQXRCO0FBQ1A7QUFDSjs7QUFDRCxRQUFHVixHQUFHLENBQUNZLEtBQVAsRUFBYTtBQUNUVCxNQUFBQSxJQUFJLEdBQUdFLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZTixHQUFHLENBQUNZLEtBQWhCLENBQVA7O0FBQ0EsV0FBSSxJQUFJTCxDQUFDLEdBQUMsQ0FBVixFQUFZQSxDQUFDLEdBQUNKLElBQUksQ0FBQ0ssTUFBbkIsRUFBMEJELENBQUMsRUFBM0IsRUFBOEI7QUFDMUIsWUFBR1IsTUFBTSxDQUFDVSxPQUFQLENBQWVOLElBQUksQ0FBQ0ksQ0FBRCxDQUFuQixLQUEyQixDQUFDLENBQTVCLElBQWlDLE9BQU9QLEdBQUcsQ0FBQ1ksS0FBSixDQUFVVCxJQUFJLENBQUNJLENBQUQsQ0FBZCxDQUFQLElBQTZCLFFBQWpFLEVBQ0lQLEdBQUcsQ0FBQ1ksS0FBSixDQUFVVCxJQUFJLENBQUNJLENBQUQsQ0FBZCxJQUFxQlAsR0FBRyxDQUFDRixRQUFKLENBQWFFLEdBQUcsQ0FBQ1ksS0FBSixDQUFVVCxJQUFJLENBQUNJLENBQUQsQ0FBZCxDQUFiLEVBQWlDRyxJQUFqQyxFQUFyQjtBQUNQO0FBQ0o7O0FBQ0RSLElBQUFBLElBQUk7QUFDUCxHQXhCRDtBQXlCSCxDQTFCTSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgc2FuaXRpemUgPSBmdW5jdGlvbihpZ25vcmU9W10pe1xuICAgIHJldHVybiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgdmFyIGRhdGEgPSBbXTtcbiAgICAgICAgaWYocmVxLmJvZHkpe1xuICAgICAgICAgICAgZGF0YSA9IE9iamVjdC5rZXlzKHJlcS5ib2R5KTtcbiAgICAgICAgICAgIGZvcih2YXIgaT0wO2k8ZGF0YS5sZW5ndGg7aSsrKXtcbiAgICAgICAgICAgICAgICBpZihpZ25vcmUuaW5kZXhPZihkYXRhW2ldKSA9PSAtMSAmJiB0eXBlb2YgcmVxLmJvZHlbZGF0YVtpXV0gPT0gJ3N0cmluZycpXG4gICAgICAgICAgICAgICAgICAgIHJlcS5ib2R5W2RhdGFbaV1dID0gcmVxLnNhbml0aXplKHJlcS5ib2R5W2RhdGFbaV1dKS50cmltKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYocmVxLnBhcmFtcyl7XG4gICAgICAgICAgICBkYXRhID0gT2JqZWN0LmtleXMocmVxLnBhcmFtcyk7XG4gICAgICAgICAgICBmb3IodmFyIGk9MDtpPGRhdGEubGVuZ3RoO2krKyl7XG4gICAgICAgICAgICAgICAgaWYoaWdub3JlLmluZGV4T2YoZGF0YVtpXSkgPT0gLTEgJiYgdHlwZW9mIHJlcS5wYXJhbXNbZGF0YVtpXV0gPT0gJ3N0cmluZycpXG4gICAgICAgICAgICAgICAgICAgIHJlcS5wYXJhbXNbZGF0YVtpXV0gPSByZXEuc2FuaXRpemUocmVxLnBhcmFtc1tkYXRhW2ldXSkudHJpbSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmKHJlcS5xdWVyeSl7XG4gICAgICAgICAgICBkYXRhID0gT2JqZWN0LmtleXMocmVxLnF1ZXJ5KTtcbiAgICAgICAgICAgIGZvcih2YXIgaT0wO2k8ZGF0YS5sZW5ndGg7aSsrKXtcbiAgICAgICAgICAgICAgICBpZihpZ25vcmUuaW5kZXhPZihkYXRhW2ldKSA9PSAtMSAmJiB0eXBlb2YgcmVxLnF1ZXJ5W2RhdGFbaV1dID09ICdzdHJpbmcnKVxuICAgICAgICAgICAgICAgICAgICByZXEucXVlcnlbZGF0YVtpXV0gPSByZXEuc2FuaXRpemUocmVxLnF1ZXJ5W2RhdGFbaV1dKS50cmltKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gXG4gICAgICAgIG5leHQoKTtcbiAgICB9XG59OyAiXX0=